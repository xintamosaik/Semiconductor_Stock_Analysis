Traceback (most recent call last):
  File "/home/ulf/.cache/pypoetry/virtualenvs/semiconductor-stock-analysis-1xuAAPXo-py3.13/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
    ~~~~~~~~~~~~~~~~~~~~~~~~^^
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ulf/.cache/pypoetry/virtualenvs/semiconductor-stock-analysis-1xuAAPXo-py3.13/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/home/ulf/.cache/pypoetry/virtualenvs/semiconductor-stock-analysis-1xuAAPXo-py3.13/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/ulf/.cache/pypoetry/virtualenvs/semiconductor-stock-analysis-1xuAAPXo-py3.13/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/lib/python3.13/asyncio/base_events.py", line 719, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/home/ulf/.cache/pypoetry/virtualenvs/semiconductor-stock-analysis-1xuAAPXo-py3.13/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/home/ulf/.cache/pypoetry/virtualenvs/semiconductor-stock-analysis-1xuAAPXo-py3.13/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/ulf/.cache/pypoetry/virtualenvs/semiconductor-stock-analysis-1xuAAPXo-py3.13/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import yfinance as yf
import pandas as pd


# List of semiconductor stock tickers
tickers = ['NVDA', 'INTC', 'AMD', 'QCOM', 'TSM']

# Set the time period for historical data (adjust as needed)
start_date = '2015-01-01'
end_date = '2023-12-31'

# Dictionary to hold data for each stock
stock_data = {}

# Fetch data for each stock
for ticker in tickers:
    print("Fetching data for {}...".format(ticker))
    stock_data[ticker] = yf.download(ticker, start=start_date, end=end_date)

# Combine data into a single DataFrame
# Using adjusted close prices and aligning by date
combined_data = pd.concat([stock_data[ticker]['Adj Close'].rename(ticker) for ticker in tickers], axis=1)

# Save to CSV
combined_data.to_csv('semiconductor_stock_data.csv')

print("Data fetched and saved to 'semiconductor_stock_data.csv'")
------------------

----- stdout -----
Fetching data for NVDA...
YF.download() has changed argument auto_adjust default to True
----- stderr -----
[*********************100%***********************]  1 of 1 completed
----- stderr -----

----- stdout -----
Fetching data for INTC...
----- stderr -----
[*********************100%***********************]  1 of 1 completed
----- stderr -----

----- stdout -----
Fetching data for AMD...
----- stderr -----
[*********************100%***********************]  1 of 1 completed
----- stderr -----

----- stdout -----
Fetching data for QCOM...
----- stderr -----
[*********************100%***********************]  1 of 1 completed
----- stderr -----

----- stdout -----
Fetching data for TSM...
----- stderr -----
[*********************100%***********************]  1 of 1 completed
----- stderr -----

------------------

[31m---------------------------------------------------------------------------[39m
[31mKeyError[39m                                  Traceback (most recent call last)
[36mFile [39m[32m~/.cache/pypoetry/virtualenvs/semiconductor-stock-analysis-1xuAAPXo-py3.13/lib/python3.13/site-packages/pandas/core/indexes/base.py:3805[39m, in [36mIndex.get_loc[39m[34m(self, key)[39m
[32m   3804[39m [38;5;28;01mtry[39;00m:
[32m-> [39m[32m3805[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43m_engine[49m[43m.[49m[43mget_loc[49m[43m([49m[43mcasted_key[49m[43m)[49m
[32m   3806[39m [38;5;28;01mexcept[39;00m [38;5;167;01mKeyError[39;00m [38;5;28;01mas[39;00m err:

[36mFile [39m[32mindex.pyx:167[39m, in [36mpandas._libs.index.IndexEngine.get_loc[39m[34m()[39m

[36mFile [39m[32mindex.pyx:196[39m, in [36mpandas._libs.index.IndexEngine.get_loc[39m[34m()[39m

[36mFile [39m[32mpandas/_libs/hashtable_class_helper.pxi:7081[39m, in [36mpandas._libs.hashtable.PyObjectHashTable.get_item[39m[34m()[39m

[36mFile [39m[32mpandas/_libs/hashtable_class_helper.pxi:7089[39m, in [36mpandas._libs.hashtable.PyObjectHashTable.get_item[39m[34m()[39m

[31mKeyError[39m: 'Adj Close'

The above exception was the direct cause of the following exception:

[31mKeyError[39m                                  Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[1][39m[32m, line 22[39m
[32m     18[39m     stock_data[ticker] = yf.download(ticker, start=start_date, end=end_date)
[32m     20[39m [38;5;66;03m# Combine data into a single DataFrame[39;00m
[32m     21[39m [38;5;66;03m# Using adjusted close prices and aligning by date[39;00m
[32m---> [39m[32m22[39m combined_data = pd.concat([[43mstock_data[49m[43m[[49m[43mticker[49m[43m][49m[43m[[49m[33;43m'[39;49m[33;43mAdj Close[39;49m[33;43m'[39;49m[43m][49m.rename(ticker) [38;5;28;01mfor[39;00m ticker [38;5;129;01min[39;00m tickers], axis=[32m1[39m)
[32m     24[39m [38;5;66;03m# Save to CSV[39;00m
[32m     25[39m combined_data.to_csv([33m'[39m[33msemiconductor_stock_data.csv[39m[33m'[39m)

[36mFile [39m[32m~/.cache/pypoetry/virtualenvs/semiconductor-stock-analysis-1xuAAPXo-py3.13/lib/python3.13/site-packages/pandas/core/frame.py:4101[39m, in [36mDataFrame.__getitem__[39m[34m(self, key)[39m
[32m   4099[39m [38;5;28;01mif[39;00m is_single_key:
[32m   4100[39m     [38;5;28;01mif[39;00m [38;5;28mself[39m.columns.nlevels > [32m1[39m:
[32m-> [39m[32m4101[39m         [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43m_getitem_multilevel[49m[43m([49m[43mkey[49m[43m)[49m
[32m   4102[39m     indexer = [38;5;28mself[39m.columns.get_loc(key)
[32m   4103[39m     [38;5;28;01mif[39;00m is_integer(indexer):

[36mFile [39m[32m~/.cache/pypoetry/virtualenvs/semiconductor-stock-analysis-1xuAAPXo-py3.13/lib/python3.13/site-packages/pandas/core/frame.py:4159[39m, in [36mDataFrame._getitem_multilevel[39m[34m(self, key)[39m
[32m   4157[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_getitem_multilevel[39m([38;5;28mself[39m, key):
[32m   4158[39m     [38;5;66;03m# self.columns is a MultiIndex[39;00m
[32m-> [39m[32m4159[39m     loc = [38;5;28;43mself[39;49m[43m.[49m[43mcolumns[49m[43m.[49m[43mget_loc[49m[43m([49m[43mkey[49m[43m)[49m
[32m   4160[39m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(loc, ([38;5;28mslice[39m, np.ndarray)):
[32m   4161[39m         new_columns = [38;5;28mself[39m.columns[loc]

[36mFile [39m[32m~/.cache/pypoetry/virtualenvs/semiconductor-stock-analysis-1xuAAPXo-py3.13/lib/python3.13/site-packages/pandas/core/indexes/multi.py:3040[39m, in [36mMultiIndex.get_loc[39m[34m(self, key)[39m
[32m   3037[39m     [38;5;28;01mreturn[39;00m mask
[32m   3039[39m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(key, [38;5;28mtuple[39m):
[32m-> [39m[32m3040[39m     loc = [38;5;28;43mself[39;49m[43m.[49m[43m_get_level_indexer[49m[43m([49m[43mkey[49m[43m,[49m[43m [49m[43mlevel[49m[43m=[49m[32;43m0[39;49m[43m)[49m
[32m   3041[39m     [38;5;28;01mreturn[39;00m _maybe_to_slice(loc)
[32m   3043[39m keylen = [38;5;28mlen[39m(key)

[36mFile [39m[32m~/.cache/pypoetry/virtualenvs/semiconductor-stock-analysis-1xuAAPXo-py3.13/lib/python3.13/site-packages/pandas/core/indexes/multi.py:3391[39m, in [36mMultiIndex._get_level_indexer[39m[34m(self, key, level, indexer)[39m
[32m   3388[39m         [38;5;28;01mreturn[39;00m [38;5;28mslice[39m(i, j, step)
[32m   3390[39m [38;5;28;01melse[39;00m:
[32m-> [39m[32m3391[39m     idx = [38;5;28;43mself[39;49m[43m.[49m[43m_get_loc_single_level_index[49m[43m([49m[43mlevel_index[49m[43m,[49m[43m [49m[43mkey[49m[43m)[49m
[32m   3393[39m     [38;5;28;01mif[39;00m level > [32m0[39m [38;5;129;01mor[39;00m [38;5;28mself[39m._lexsort_depth == [32m0[39m:
[32m   3394[39m         [38;5;66;03m# Desired level is not sorted[39;00m
[32m   3395[39m         [38;5;28;01mif[39;00m [38;5;28misinstance[39m(idx, [38;5;28mslice[39m):
[32m   3396[39m             [38;5;66;03m# test_get_loc_partial_timestamp_multiindex[39;00m

[36mFile [39m[32m~/.cache/pypoetry/virtualenvs/semiconductor-stock-analysis-1xuAAPXo-py3.13/lib/python3.13/site-packages/pandas/core/indexes/multi.py:2980[39m, in [36mMultiIndex._get_loc_single_level_index[39m[34m(self, level_index, key)[39m
[32m   2978[39m     [38;5;28;01mreturn[39;00m -[32m1[39m
[32m   2979[39m [38;5;28;01melse[39;00m:
[32m-> [39m[32m2980[39m     [38;5;28;01mreturn[39;00m [43mlevel_index[49m[43m.[49m[43mget_loc[49m[43m([49m[43mkey[49m[43m)[49m

[36mFile [39m[32m~/.cache/pypoetry/virtualenvs/semiconductor-stock-analysis-1xuAAPXo-py3.13/lib/python3.13/site-packages/pandas/core/indexes/base.py:3812[39m, in [36mIndex.get_loc[39m[34m(self, key)[39m
[32m   3807[39m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(casted_key, [38;5;28mslice[39m) [38;5;129;01mor[39;00m (
[32m   3808[39m         [38;5;28misinstance[39m(casted_key, abc.Iterable)
[32m   3809[39m         [38;5;129;01mand[39;00m [38;5;28many[39m([38;5;28misinstance[39m(x, [38;5;28mslice[39m) [38;5;28;01mfor[39;00m x [38;5;129;01min[39;00m casted_key)
[32m   3810[39m     ):
[32m   3811[39m         [38;5;28;01mraise[39;00m InvalidIndexError(key)
[32m-> [39m[32m3812[39m     [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m(key) [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01merr[39;00m
[32m   3813[39m [38;5;28;01mexcept[39;00m [38;5;167;01mTypeError[39;00m:
[32m   3814[39m     [38;5;66;03m# If we have a listlike key, _check_indexing_error will raise[39;00m
[32m   3815[39m     [38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise[39;00m
[32m   3816[39m     [38;5;66;03m#  the TypeError.[39;00m
[32m   3817[39m     [38;5;28mself[39m._check_indexing_error(key)

[31mKeyError[39m: 'Adj Close'

